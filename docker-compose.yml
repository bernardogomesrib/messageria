services:
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - demo-network

  api-ordem:
    build:
      context: ./demo-ordem
      dockerfile: Dockerfile
    environment:
      - ip=${IP_ATUAL}
      - HOST=rabbitmq
    ports:
      - "8080:8080"
    networks:
      - demo-network
    depends_on:
      - rabbitmq
  api-processadora:
    build:
      context: ./demo-processador
      dockerfile: Dockerfile
    environment:
      - ip=${IP_ATUAL}
      - HOST=rabbitmq
      - DB_URL=jdbc:postgresql://db_postgres:5432/demo
    ports:
      - "8081:8081"
    depends_on:
      - db_postgres
      - rabbitmq
    networks:
      - demo-network
  api-notificadora:
    build:
      context: ./demo-notificador
      dockerfile: Dockerfile
    environment:
      - ip=${IP_ATUAL}
      - HOST=rabbitmq
    ports:
      - "8082:8082"
    networks:
      - demo-network
    depends_on:
      - rabbitmq
  frontend:
    build:
      context: ./demo-front
      dockerfile: Dockerfile
    environment:
      - IP_ATUAL=${IP_ATUAL}
    ports:
      - "4200:80"
    networks:
      - demo-network
    volumes:
      - compilado:/app/compilado

  db_postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: demo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - demo-network
volumes:
  postgres_data:
  rabbitmq_data:
  compilado:

networks:
  demo-network:
    driver: bridge
